apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.name }}
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.frontend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.frontend.name }}
    spec:
      serviceAccountName: {{ .Values.frontend.serviceAccountName }}
      securityContext:
        fsGroup: {{ .Values.frontend.securityContext.fsGroup }}
        runAsGroup: {{ .Values.frontend.securityContext.runAsGroup }}
        runAsUser: {{ .Values.frontend.securityContext.runAsUser }}
        runAsNonRoot: {{ .Values.frontend.securityContext.runAsNonRoot }}
      strategy:
        type: {{ .Values.frontend.strategy.type }}
        rollingUpdate:
          maxSurge: {{ .Values.frontend.strategy.rollingUpdate.maxSurge }}          
          maxUnavailable: {{ .Values.frontend.strategy.rollingUpdate.maxUnavailable }}
      containers:
      - name: {{ .Values.frontend.name }}
        livenessProbe:
          httpGet:
            path: {{ .Values.frontend.livenessProbe.httpGet.path }}
            port: {{ .Values.frontend.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.frontend.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.frontend.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.frontend.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.frontend.readinessProbe.httpGet.path }}
            port: {{ .Values.frontend.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.frontend.readinessProbe.failureThreshold }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.frontend.securityContext.allowPrivilegeEscalation }}
          capabilities:
            drop:
              {{ toYaml .Values.frontend.securityContext.capabilities.drop  }}
          privileged: {{ .Values.frontend.securityContext.privileged }}
          readOnlyRootFilesystem: {{ .Values.frontend.securityContext.readOnlyRootFilesystem }}
        image: {{ .Values.frontend.image }}
        ports:
        - containerPort: {{ .Values.frontend.ports.containerPort }}
        env:
          {{- range .Values.frontend.env }}
          - name: {{ .name }}
            {{- if .value }}
            value: "{{ .value }}"
            {{- else if .valueFrom }}
            valueFrom:
              configMapKeyRef:
                name: {{ .valueFrom.configMapKeyRef.name }}
                key: {{ .valueFrom.configMapKeyRef.key }}
            {{- end }}
        {{- end }}

        resources:
            requests:
              cpu: {{ .Values.frontend.resources.requests.cpu }}
              memory: {{ .Values.frontend.resources.requests.memory }}
            limits:
              cpu: {{ .Values.frontend.resources.limits.cpu }}
              memory: {{ .Values.frontend.resources.limits.memory }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.frontend.name }}
  labels:
    app: {{ .Values.frontend.name }}
spec:
  selector:
    app: {{ .Values.frontend.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.frontend.service.port }}
      targetPort: {{ .Values.frontend.service.targetPort }}
  type: {{ .Values.frontend.service.type }}
